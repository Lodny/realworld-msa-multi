plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}


repositories {
    mavenCentral()
}


bootJar.enabled = false

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}


subprojects {
    group = 'com.lodny'
    version = '1.0-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }

    test {
        useJUnitPlatform()
    }
}


project(':rw-common') { // multi-module-databse는 bootJar로 패키징 할 필요 없음
    bootJar { enabled = false }
    jar { enabled = true }
}


project(':rw-user') { // 컴파일 시 multi-module-database 로딩
    dependencies {
        compileOnly project(':rw-common')
    }
}


project(':rw-follow') { // 컴파일 시 multi-module-database 로딩
    dependencies {
        compileOnly project(':rw-common')
    }
}
